#summary Instructions for setting up Eclipse project for checkout SDK

= Adding Subversion Support in Eclipse =

First download and install Eclipse Europa Java EE Developer edition. Then start eclipse, and create a new workspace. Then follow these steps to download and install Subversion plugin: 
  # Open Help | Software Updates |Find and Install
  # Select "Search for new features to install"
  # Click on "New Remote Site"
  # Choose Name as subclipse, and URL as: http://subclipse.tigris.org/update_1.2.x
  # Click on Finish
  # Select the checkbox for "Subclipse Plugin" and press "Next"
  # Accept the license terms and press "Next" and then "Finish" to install subclipse. 
  # Accept any prompts for installation, and eclipse restart. 
  # Congratulations! You now have subversion support available in Eclipse. 
  # Note: At this point you'll notice some errors including getServletContext() and getServletConfig() being undefined.  We'll fix these in creating the Checkout SDK below.

= Creating Checkout SDK in Eclipse =
  # Start Eclipse, and select "SVN repository Exploring" perspective in Window | Open Perspective | Other
  # Right click in the "SVN Repository" tab, and select New | Repository Location
  # For Url, use https://google-checkout-java-sdk.googlecode.com/svn/trunk/, and press "Finish"
  # Use your gmail user-name, and googlecode.com password. Note that the googlecode.com password is different from your gmail password and is auto-generated. You can view your googlecode.com password at: http://code.google.com/p/google-checkout-java-sdk/source
  # Navigate down in the tree rooted at https://google-checkout-java-sdk.googlecode.com/svn/trunk/. Right click on sdk, and select "Checkout...". Accept default values. 
  # Download the Java 2 Standard Edition Runtime Environment (JRE) or the full JDK, release version 5.0 or later, from http://java.sun.com/j2se if you don't have it already.
  # Set your JAVA_HOME variable to the JDK base directory (ex: C:\Sun\SDK\jdk) or the JRE_HOME variable to the JRE base directory (ex: c:\jre5.0)
  # Download and install Tomcat 6.0 at http://tomcat.apache.org/ if you don't have it already.  
  # Switch to "Java EE" or "Java" perspectives to start development on this project. 
  # Right-click on the root node, google-checkout-java-sdk, and select properties. 
  # Select "Targeted Runtimes" and create a new runtime for Apache | Apache Tomcat 6.0.
  # (Only in the Java EE perspective) Select "Servers" tab below the main editor window.  Right-Click in the window and select New | Server.  Choose Apache | Tomcat 6.0 Server, click Next.  Then click "Add All >>" to configure the project on the server.
  # Clean and Rebuild the project by first going to Project | Build Automatically and then selecting Project | Build All.  Then re-enable automatic building by selecting Project | Build Automatically.  This should get rid of the errors we have seen before.
  # Congratulations, you now have the Checkout SDK project setup with Eclipse. 
  # To run the SDK, right click on the google-checkout-java-sdk node, select "Run As" | "Run On Server"