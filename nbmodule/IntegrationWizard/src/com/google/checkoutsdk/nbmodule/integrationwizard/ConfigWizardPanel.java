package com.google.checkoutsdk.nbmodule.integrationwizard;

import com.google.checkoutsdk.nbmodule.integrationwizard.handlers.CheckoutConfigManager;
import java.awt.Component;
import java.io.File;
import java.net.URI;
import javax.swing.JPanel;
import javax.swing.event.ChangeListener;
import org.openide.WizardDescriptor;
import org.openide.util.HelpCtx;

public final class ConfigWizardPanel extends JPanel {
    
    // Integration settings, built by this wizard
    private Settings settings;
    
    /**
     * Creates the checkout-config.xml editing panel for the Integration Wizard. 
     */
    public ConfigWizardPanel() {        
        initComponents();
    }
    
    /**
     * Returns the name for this panel, which is used in the wizard as both the
     * title and the name of each step.
     *
     * @return Name of this panel
     */
    public String getName() {
        return "Create Config File";
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        configLabel = new javax.swing.JLabel();
        configTextField = new javax.swing.JTextField();
        separator1 = new javax.swing.JSeparator();
        merchantIdLabel = new javax.swing.JLabel();
        merchantKeyLabel = new javax.swing.JLabel();
        merchantIdTextField = new javax.swing.JTextField();
        merchantKeyTextField = new javax.swing.JTextField();
        envComboBox = new javax.swing.JComboBox();
        envLabel = new javax.swing.JLabel();
        currencyCodeLabel = new javax.swing.JLabel();
        currencyCodeTextField = new javax.swing.JTextField();

        configLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        org.openide.awt.Mnemonics.setLocalizedText(configLabel, "This will place checkout-config at:");

        configTextField.setEditable(false);

        merchantIdLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        org.openide.awt.Mnemonics.setLocalizedText(merchantIdLabel, "Merchant ID:");

        merchantKeyLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        org.openide.awt.Mnemonics.setLocalizedText(merchantKeyLabel, "Merchant Key:");

        envComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sandbox", "Production" }));

        envLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        org.openide.awt.Mnemonics.setLocalizedText(envLabel, "Environment:");

        currencyCodeLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        org.openide.awt.Mnemonics.setLocalizedText(currencyCodeLabel, "Currency Code:");

        currencyCodeTextField.setText("USD");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(configTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .add(configLabel)
                    .add(layout.createSequentialGroup()
                        .add(merchantKeyLabel)
                        .add(19, 19, 19)
                        .add(merchantKeyTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE))
                    .add(separator1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(merchantIdLabel)
                        .add(28, 28, 28)
                        .add(merchantIdTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .add(envLabel)
                        .add(26, 26, 26)
                        .add(envComboBox, 0, 275, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .add(currencyCodeLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(currencyCodeTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 85, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(configLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(configTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(separator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(merchantIdTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(merchantIdLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(merchantKeyTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(merchantKeyLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(envLabel)
                    .add(envComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(currencyCodeLabel)
                    .add(currencyCodeTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(127, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    /*************************************************************************/
    /*                           EVENT HANDLERS                              */
    /*************************************************************************/
    
    /*************************************************************************/
    /*                          SWING VARIABLES                              */
    /*************************************************************************/
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel configLabel;
    private javax.swing.JTextField configTextField;
    private javax.swing.JLabel currencyCodeLabel;
    private javax.swing.JTextField currencyCodeTextField;
    private javax.swing.JComboBox envComboBox;
    private javax.swing.JLabel envLabel;
    private javax.swing.JLabel merchantIdLabel;
    private javax.swing.JTextField merchantIdTextField;
    private javax.swing.JLabel merchantKeyLabel;
    private javax.swing.JTextField merchantKeyTextField;
    private javax.swing.JSeparator separator1;
    // End of variables declaration//GEN-END:variables
    
    /*************************************************************************/
    /*                          UTILITY METHODS                              */
    /*************************************************************************/
    
    private void updatePanel() {
        // Update the config text field
        URI uri = settings.getWebInfDirectory().toURI().resolve("checkout-config.xml");
        String configFileName = uri.toString().replace("file:", "");
        configTextField.setText(configFileName);
    }
    
    private void recordSettings() {
        CheckoutConfigManager configManager = settings.getConfigManager();
        
        configManager.setMerchantId(merchantIdTextField.getText());
        configManager.setMerchantKey(merchantKeyTextField.getText());
        configManager.setEnv((String)envComboBox.getSelectedItem());
        configManager.setCurrencyCode(currencyCodeTextField.getText());
        configManager.setNewFileName(configTextField.getText());
    }
    
    /*************************************************************************/
    /*                         SETTINGS ACCESSORS                            */
    /*************************************************************************/
    
    public Settings getSettings() {
        return settings;
    }
    
    public void setSettings(Settings settings) {
        this.settings = settings;
    }
    
    /*************************************************************************/
    /*                       WIZARD DESCRIPTOR PANEL                         */
    /*************************************************************************/
    
    public static class Panel implements WizardDescriptor.Panel {
        // The visual component of this panel
        private ConfigWizardPanel component;

        public Component getComponent() {
            if (component == null) {
                component = new ConfigWizardPanel();
            }
            return component;
        }

        public HelpCtx getHelp() {
            return HelpCtx.DEFAULT_HELP;
        }

        public boolean isValid() {
            return true;
        }

        // TODO: Add listener to enable/disable 'next' button
        public final void addChangeListener(ChangeListener l) {}
        public final void removeChangeListener(ChangeListener l) {}
        
        public void readSettings(Object settings) {
            // Read shared info from the wizard descriptor
            IntegrationWizardDescriptor descriptor = (IntegrationWizardDescriptor) settings;
            component.setSettings(descriptor.getSettings());

            // Update the config file's name
            component.updatePanel();
        }
        
        public void storeSettings(Object settings) {
            // Record the page state into settings
            component.recordSettings();
            
            // Write shared info to the wizard descriptor
            IntegrationWizardDescriptor descriptor = (IntegrationWizardDescriptor) settings;
            descriptor.setSettings(component.getSettings());
        }
    }
}

